<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>방명록</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
</head>
<body>
    <form name="form-visitor">
        <fieldset>
            <legend>방명록 등록</legend>
            <input type="text" name="username"/>
            <br />
            <input type="text" name="comment" />
            <br />
            <button type="button" onclick="addVisitor()">등록</button>
        </fieldset>
    </form>
    <div>
        <table border="1" cellspacing="0">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>작성자</th>
                    <th>방명록</th>
                    <th>수정</th>
                    <th>삭제</th>
                </tr>
            </thead>
            <tbody>
                <% for(let i = 0; i< data.length; i++) { %>
                    <tr>
                        <th><%= data[i].id %></th>
                        <th><%= data[i].username %></th>
                        <th><%= data[i].comment %></th>
                        <th><button type="button" onclick="updateVisitor('<%= data[i].id %>', this.parentElement.parentElement)">수정</button></th>
                        <th><button type="button" onclick="deleteVisitor('<%= data[i].id %>', this.parentElement.parentElement)">삭제</button></th>
                         <!-- <th><button type="button" onclick="deleteVisitor(this.parentElement)">삭제</button></th>   이렇게도 쓸 수 있다. -->
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <script>
        function addVisitor() {
            // 서버에 보낼 데이터를 만들어야 함.
            const form = document.forms["form-visitor"]
            const data = {
                username: form.username.value,
                comment: form.comment.value
            }

            // axios를 이용해 데이터를 서버로 전송
            axios({
                method: 'post',
                url:'/visitor',
                data: data
            }).then((res)=> {
                 // axios 응답을 받으면, table에 행 추가 (동적으로)
                const {
                    id,
                    username,
                    comment
                } = res.data

                $("tbody").append(`<tr>
                    <td>${id}</td>
                    <td>${username}</td>
                    <td>${comment}</td>
                    <th><button type="button" onclick="updateVisitor(${id}),  this.parentElement.parentElement">수정</button></th>
                    <th><button type="button" onclick="deleteVisitor(${id}),  this.parentElement.parentElement">삭제</button></th>
                    </tr>`)
            })
        }

        function deleteVisitor(id, TrElement) {
            // 삭제할 id가 필요

            // id를 이용해서 url을 완성, 요청 보내기 
            axios({
                method: 'delete',
                url: `/visitor/${id}`
            }).then((res)=>{
                console.log(res.data);

                if(res.data.result) {
                // 삭제할 td태그가 필요하다
                $(TrElement).remove();
                } else {
                    alert("존재하지 않는 방명록 입니다.")
                }

            })
        }
    </script>
</body>
</html>